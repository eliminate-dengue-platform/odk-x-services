# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    previous_build_number = google_play_track_version_codes(
            track: "internal",
          )[0]
          current_build_number = previous_build_number + 1
        gradle(
        task: "assembleRelease --parallel --configure-on-demand",
          properties: {
            "android.injected.version.code" => current_build_number,
            "android.injected.signing.store.file" => ENV["KEYSTORE"],
            "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
            "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
            "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
          }
          )
        upload_to_play_store(
            track: "beta",
            release_status: "draft"
        )
  end

  desc "Submit a new Internal Test Build"
  lane :internal do
      previous_build_number = google_play_track_version_codes(
        track: "internal",
      )[0]
      current_build_number = previous_build_number + 1
    gradle(
    task: "assembleRelease --parallel --configure-on-demand",
      properties: {
        "android.injected.version.code" => current_build_number,
        "android.injected.signing.store.file" => ENV["KEYSTORE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
      }
      )
    upload_to_play_store(
        track: "internal",
        release_status: "draft"
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
